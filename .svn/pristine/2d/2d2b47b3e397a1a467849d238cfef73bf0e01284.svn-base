import React, { useState, useEffect } from 'react';
import styles from './ParkingService.module.css'
import { Modal, Button, Form, Tabs, Tab, Nav, Row, Col, Table } from 'react-bootstrap';
import ParkingInfo from './ParkingInfo';
import AddParkingCameraModal from '../shared/modal/AddParkingCameraModal';
import { handleCloseContext } from "./handlers/ContextMenuHandler";
import ParkingCameraStream from './ParkingCameraStream';
import { getParkingCamera } from './api/apiService';


export default function ParkingService({
	showParkingServiceModal,
	handleShowParkingServiceModal,
	parkingCameraUpdate,
	show, setShow, title, message }) {
	const [parkingCameras, setParkingCameras] = useState([]);
	const [modalWarnMessage, setModalWarnMessage] = useState('');
	const [currentTabName, setCurrentTabName] = useState('observer parkingService');
	const [cameraModal, setCameraModal] = useState({ show: false, title: '', message: '', callback: false });

	const handleShowModalCamera = () => {
		setCameraModal({ show: true, title: '주차 카메라 추가', message: '카메라 선택', callback: false });
		handleCloseContext();
	}

	const handleConfirm = () => {
		try {

		} catch (err) {
			console.log('카메라 추가 오류: ', err);
		}
		handleCancel();
	}

	const handleCancel = () => {
		handleShowParkingServiceModal();
	}

	const handleCurrentTabName = (value) => {
		setCurrentTabName(value)
	}

	const getParkingCameraList = async () => {
		try {
			const res = await getParkingCamera();
			if (res && res.data && res.data.result.length > 0) {
				await setParkingCameras(res.data.result);
			}
		} catch (err) {
			console.error('getParkingCameraList err: ', err);
		}
	}

	useEffect(() => {
		getParkingCameraList();
	}, [parkingCameraUpdate])

	return (
		<>
			<Modal
				show={showParkingServiceModal}
				size='xl'
				centered
				contentClassName={styles.modal_content_observer_parkingService}
				onHide={handleCancel}
			>
				<Modal.Header>
					<Modal.Title>옵저버 주차관제시스템</Modal.Title>
					<div >
						<a href="!#" className={styles.setting_modal_closer} onClick={handleCancel}></a>
					</div>
					<Button style={{ marginRight: '3%' }} onClick={handleShowModalCamera}> 카메라 추가 </Button>
				</Modal.Header>
				<Modal.Body>
					<div>
						<Tab.Container id="left-tabs-example" defaultActiveKey="all">
							<div className='col-12'>
								<Row className='parking-tab'>
									<Col sm={1} className={styles.observer_parking_col_sm_1}>
										<Nav variant="tabs" className="flex-column nav-tabs-vertical">
											<Nav.Item>
												<Nav.Link eventKey="all">
													전체
												</Nav.Link>
											</Nav.Item>
											{parkingCameras && parkingCameras.map((parkingCamera) => {
												return <Nav.Item>
													<Nav.Link eventKey={parkingCamera.name}>
														{parkingCamera.name}
													</Nav.Link>
												</Nav.Item>
											})}
										</Nav>
									</Col>
									<Col sm={8} className={styles.observer_parking_col_sm_8}>
										<Tab.Content>
											<Tab.Pane eventKey="all">
												<div className={styles.info_title}>
													<h4> 카메라 영상 </h4>
													<ParkingCameraStream 
														parkingCameras={parkingCameras}
													/>
												</div>

											</Tab.Pane>
										</Tab.Content>
									</Col>

									<Col sm={3} className={styles.observer_parking_col_sm_3}>
										<Tab.Content>
											<Tab.Pane eventKey="all">
												<div className={styles.info_title}>
													<h4> 주차장 세부현황 </h4>
													<ParkingInfo />

												</div>
											</Tab.Pane>
										</Tab.Content>
									</Col>
								</Row>
							</div>

							<div className='row'>
								<Row className='parking-tab'>
									<Col sm={12} className={styles.observer_parking_event_col_sm_12}>
										<Tab.Content>
											<Tab.Pane eventKey="vms">
												이벤트 정보
											</Tab.Pane>
										</Tab.Content>
									</Col>
								</Row>
							</div>
						</Tab.Container>
					</div>
				</Modal.Body>
			</Modal>
			{cameraModal.show ? <AddParkingCameraModal show={cameraModal.show} setShow={setCameraModal} message={cameraModal.message} title={cameraModal.title} cameraList={parkingCameras} /> : null}
		</>
	)
}